//
//  ModelTableViewCell.swift
//  SelfPlatnoTableView
//
//  Created by Valery on 27.08.2024.
//

import Foundation
//MARK: Здесь будет находится модель -по сути это отражение нашего объекта(а у нас объект это заведение, ресторан,просто место)-модель должна описывать все поля, которые могут быть доступны при работе с этим объектом. Это могут быть поля(лейблы, кнопки, изображ и тд) находящееся внутри ячейки.
//В качестве модели данных обычно используют структуры так как они не требуют создания инициализаторов, потому что они есть по умолчанию. Поэтому достаточно перечислить все необходимые свойства и при создании экземпляра  структуры будет доступен инициализатор со всеми нашими свойстваминаходящимися в теле структуры  в виде параметров. А если точнее сначала создаем свойства -поля а затем присваиваем им значения(параметры)
//Вообще то сначала делается модель данных а потом подстраиваем под нее модель приложения
struct Place {
    var name: String
    var location: String
    var type: String
    var image: String//почему стринг-потому что к нашему изображению обращаемся по имени файла
    
    static    let restauratnNames = ["Балкан Гриль", "Бочка",
                               "Вкусные истории", "Дастархан",
                               "Индокитай", "Классик", "Шок",
                               "Bonsai","Burger Heroes", "Kitchen","Love&Life","Morris Pub","Sherlock Holmes","Speak Easy","X.O"
        ]
    //вообще то массивы должны хранится в отдельных файлах и
    //MARK: Ниже код -метод который позволяет генерировать значения находящиеся в массиве так чтобы эти значения отражались в интерфейсe  со всеми названиями из массива
    
  static  func getPlaces()->[Place]{
    var places = [Place]()
        //далее через цикл будем перебирать все елементы массива и значения будем присваивать свойствам
        for place in restauratnNames {
            places.append(Place(name: place, location: "Piter", type: "restouran", image: place))
        }
        return places
        
    }
}
